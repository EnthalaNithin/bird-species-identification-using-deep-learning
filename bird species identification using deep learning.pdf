android:text="@string/text_hello" />
android:layout_wid<?xml version="1.0" encoding="utf-8"?>
<LinearLayoutxmlns:android="http://schemas.android.com/apk/res/android" 
android:layout_width="match_parent" 
android:layout_height="match_parent"
android:orientation="vertical">

<android.support.v7.widget.LinearLayoutCompat th="match_parent" 
android:layout_height="150dp" android:background="@color/colorTextHint"
 android:gravity="center" 
android:orientation="vertical">

<android.support.v7.widget.AppCompatTextView 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:text="Bookings" android:textSize="20sp" />

<android.support.v7.widget.AppCompatTextView 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:layout_marginTop="10dp"
<android.support.v7.widget.AppCompatTextView 
android:id="@+id/textViewName" 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" />

</android.support.v7.widget.LinearLayoutCompat>

<android.support.v7.widget.AppCompatTextView 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:paddingBottom="5dp" 
android:paddingLeft="16dp" 
android:paddingTop="5dp" 
android:text="Bookings" 
android:textColor="@android:color/black" />

<ScrollView 
android:id="@+id/scrollview" 
android:layout_width="fill_parent" 
android:layout_height="fill_parent" 
android:layout_below="@+id/spinner1" 
android:layout_alignParentBottom="true" 
android:layout_alignParentLeft="true" >

<LinearLayout
android:layout_width="match_parent" 
android:layout_height="562dp" 
android:layout_marginBottom="200dp" 
android:orientation="vertical" >

<ListView
 

android:id="@+id/listView1"
android:layout_width="wrap_content" 
android:layout_height="600dp" 
android:layout_marginLeft="0dp" >
</ListView>

</LinearLayout>
</ScrollView>

</LinearLayout>


Java Code page

package com.example.spaceimpactor.houser.activities;

import  java.util.ArrayList; 
import android.os.Bundle; 
import android.app.Activity; 
import android.content.Context; 
import android.content.Intent; 
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.view.View;
import android.view.View.OnClickListener; 
import android.widget.AdapterView; import 
android.widget.ArrayAdapter; 
import android.widget.Button;
import android.widget.EditText; 
import android.widget.ImageView; 
import android.widget.ListView; 
import android.widget.Spinner; 
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Toast;

import com.example.spaceimpactor.houser.R;

public class Bookings extends Activity{ Spinner sp;
ImageViewout; 
TextViewaaa; 
SQLiteDatabasedb; 
ListViewl; 
EditTextt1;
ArrayList<String>list1; 
ArrayAdapteradapter;
Button sub;
String lmb,lser,lem;

@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_bookings);
final GlobalClassglobalvariabel=(GlobalClass)getApplicationContext();
 aaa=(TextView)findViewById(R.id.textViewName);
 aaa.setText(globalvariabel.GetUsername().toString());

db=openOrCreateDatabase("ServiceProvider",Context.MODE_PRIVATE, null);
l = (ListView) findViewById(R.id.listView1);
final ArrayList<String> list = new ArrayList<String>();
list1 = new ArrayList<String>();
Cursor res = db.rawQuery("SELECT * FROM book where uid='" + aaa.getText() + "'", null);
 if (res.getCount() != 0) {
while (res.moveToNext()) {
list.add("Name: " + res.getString(1) + "\nMobile No: " + res.getString(2) + "\n" + "Service Type: " + res.getString(3) + "\n" + "Email: " + res.getString(4)+ "\n" + "Booking Date: " + res.getString(5));
 

list1.add(res.getString(1));
}
}
adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, list);
l.setAdapter(adapter);
}

}

Java Code 

package com.example.spaceimpactor.houser.fragment;

import android.content.Context;
import android.content.Intent;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.support.annotation.NonNull; 
import android.support.v4.app.Fragment; 
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import android.support.annotation.Nullable;
import android.support.design.widget.Snackbar;
import android.support.design.widget.TextInputEditText; 
import android.support.design.widget.TextInputLayout; 
import android.support.v4.widget.NestedScrollView; 
import android.support.v7.app.AppCompatActivity; 
import android.support.v7.widget.AppCompatButton; 
import android.support.v7.widget.AppCompatTextView; 
import android.widget.Button;
import android.widget.EditText; 
import android.widget.ProgressBar; 
import android.widget.TextView; 
import android.widget.Toast;

import com.google.firebase.auth.FirebaseAuth; 
import com.google.firebase.auth.FirebaseUser; 
import com.google.firebase.database.DataSnapshot; 
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference; 
import com.google.firebase.database.FirebaseDatabase; 
import com.google.firebase.database.ValueEventListener;

public class ProfileFragmentextends Fragment implements View.OnClickListener {

private NestedScrollViewnestedScrollView;

private TextInputLayouttextInputLayoutName; 
private TextInputLayouttextInputLayoutPhone; 
private TextInputLayouttextInputLayoutEmail; 
private TextInputLayouttextInputLayoutPassword;
private TextInputLayouttextInputLayoutConfirmPassword;

private TextInputEditTexttextInputEditTextName; 
private TextInputEditTexttextInputEditTextPhone; 
private TextInputEditTexttextInputEditTextEmail; 
private TextInputEditTexttextInputEditTextPassword;
private TextInputEditTexttextInputEditTextConfirmPassword;

private AppCompatButtonappCompatButtonRegister;

private InputValidationinputValidation; 
private DatabaseHelperdatabaseHelper; 
private User user;
 

EditTextid,ps,em,mb; Button sub;
SQLiteDatabasedb; TextViewaaa;

private static final String TAG = MainActivity.class.getSimpleName();
private TextViewtxtDetails;
private EditTextinputName, inputEmail; private Button btnSave;
private DatabaseReferencemFirebaseDatabase;
private FirebaseDatabasemFirebaseInstance;

private String userId;

private Button btnChangeEmail, btnChangePassword, btnSendResetEmail, btnRemoveUser, changeEmail, changePassword, sendEmail, remove, signOut;

private EditTextoldEmail, newEmail, password, newPassword; private ProgressBarprogressBar;
private FirebaseAuth.AuthStateListenerauthListener;
private FirebaseAuthauth;


@Override
public View onCreateView(LayoutInflaterinflater, ViewGroup container, Bundle savedInstanceState) {
// Inflate the layout for this fragment
View myView = inflater.inflate(R.layout.fragment_profile, container, false);
//	appCompatButtonRegister = (AppCompatButton) myView.findViewById(R.id.appCompatButtonRegister);
//	appCompatButtonRegister.setOnClickListener(this);
return myView;


}
private void createUser(String name, String email) {
// TODO
// In real apps this userId should be fetched
// by implementing firebase auth
if (TextUtils.isEmpty(userId)) {
userId= mFirebaseDatabase.push().getKey();
}

User user = new User();
mFirebaseDatabase.child(userId).setValue(user); addUserChangeListener();
}

 
/**
 

*	User data change listener
*/
 
private void addUserChangeListener()
 {
// User data change listener mFirebaseDatabase.child(userId).addValueEventListener(new ValueEventListener()
 { 
@Override
public void onDataChange(DataSnapshotdataSnapshot) { User user = dataSnapshot.getValue(User.class);

// Check for null
if (user == null) {
Log.e(TAG, "User data is null!"); return;
}

inputEmail.setText(""); inputName.setText("");

}
 

@Override
public void onCancelled(DatabaseError error) 
{
// Failed to read value
Log.e(TAG, "Failed to read user", error.toException());
}
});
}

private void updateUser(String name, String email) {
// updating the user via child nodes
if (!TextUtils.isEmpty(name))
mFirebaseDatabase.child(userId).child("name").setValue(name);

if (!TextUtils.isEmpty(email))
mFirebaseDatabase.child(userId).child("email").setValue(email);
}

//sign out method public void signOut() { auth.signOut();
}

@Override
public void onResume() { super.onResume(); progressBar.setVisibility(View.GONE);
}

@Override
public void onStart() {
super.onStart(); auth.addAuthStateListener(authListener);
}

@Override
public void onStop() {
super.onStop();
if (authListener!= null) {
auth.removeAuthStateListener(authListener);
}
}

public void onViewCreated(@NonNullView view, 
@NullableBundle savedInstanceState) {
super.onViewCreated(view, savedInstanceState);
//	initViews();
//	initObjects();
auth= FirebaseAuth.getInstance();

//get current user
final FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();

authListener= new FirebaseAuth.AuthStateListener() { @Override
public void onAuthStateChanged(@NonNullFirebaseAuthfirebaseAuth) 
{ FirebaseUser user = firebaseAuth.getCurrentUser();
if (user == null) {
// user auth state is changed - user is null
// launch login activity
startActivity(new Intent(getActivity(), LoginActivity.class));
}
}
};

//	btnChangeEmail = (Button) findViewById(R.id.change_email_button);
//btnChangePassword = (Button) findViewById(R.id.change_password_button); 
btnSendResetEmail= (Button) getView().findViewById(R.id.sending_pass_reset_button); 
btnRemoveUser= (Button) getView().findViewById(R.id.remove_user_button);
//	changeEmail = (Button) getView().findViewById(R.id.changeEmail);
//	changePassword = (Button) getView().findViewById(R.id.changePass);
 

sendEmail= (Button) getView().findViewById(R.id.send); remove = (Button) getView().findViewById(R.id.remove); 
signOut= (Button) getView().findViewById(R.id.sign_out);

oldEmail= (EditText) getView().findViewById(R.id.old_email); 
newEmail= (EditText) getView().findViewById(R.id.new_email); 
password = (EditText) getView().findViewById(R.id.password); 
newPassword= (EditText) getView().findViewById(R.id.newPassword);

oldEmail.setVisibility(View.GONE); newEmail.setVisibility(View.GONE); 
password.setVisibility(View.GONE); 
newPassword.setVisibility(View.GONE);
//	changeEmail.setVisibility(View.GONE);
//	changePassword.setVisibility(View.GONE); 
sendEmail.setVisibility(View.GONE); 
remove.setVisibility(View.GONE);

progressBar= (ProgressBar) getView().findViewById(R.id.progressBar);
if (progressBar!= null) {
progressBar.setVisibility(View.GONE);
}
btnSendResetEmail.setOnClickListener(new View.OnClickListener() { @Override
public void onClick(View v) { oldEmail.setVisibility(View.VISIBLE); 
newEmail.setVisibility(View.GONE); 
password.setVisibility(View.GONE); 
newPassword.setVisibility(View.GONE);
//	changeEmail.setVisibility(View.GONE);
//	changePassword.setVisibility(View.GONE); 
sendEmail.setVisibility(View.VISIBLE); 
remove.setVisibility(View.GONE);
}
});

sendEmail.setOnClickListener(new View.OnClickListener() { @Override
public void onClick(View v) {
progressBar.setVisibility(View.VISIBLE);
if (!oldEmail.getText().toString().trim().equals("")) {
auth.sendPasswordResetEmail(oldEmail.getText().toString().trim())
.addOnCompleteListener(new OnCompleteListener<Void>() {
@Override
public void onComplete(@NonNullTask<Void> task) {
if (task.isSuccessful()) {
Toast.makeText(getActivity(), "Reset password email is sent!", Toast.LENGTH_SHORT).show();
progressBar.setVisibility(View.GONE);
} else {
Toast.makeText(getActivity(), "Failed to send reset email!", Toast.LENGTH_SHORT).show();
progressBar.setVisibility(View.GONE);
}
}
});
} else {
oldEmail.setError("Enter email"); progressBar.setVisibility(View.GONE);
}
}
});

btnRemoveUser.setOnClickListener(new View.OnClickListener() { @Override
public void onClick(View v) {
progressBar.setVisibility(View.VISIBLE);
 

 
if (user != null) { user.delete()

@Override
 


.addOnCompleteListener(new OnCompleteListener<Void>() {
 
public void onComplete(@NonNullTask<Void> task) {
if (task.isSuccessful()) {
Toast.makeText(getActivity(), 
"Your profile is deleted:( Create a account now!", Toast.LENGTH_SHORT).show(); startActivity(new Intent(getActivity(), RegisterActivity.class));
//	finish();
progressBar.setVisibility(View.GONE);
} else {
Toast.makeText(getActivity(), "Failed to delete your account!", Toast.LENGTH_SHORT).show();
progressBar.setVisibility(View.GONE);
}
}
});
}
}
});

signOut.setOnClickListener(new View.OnClickListener() { @Override
public void onClick(View v) { signOut();
}
});

//txtDetails = (TextView) findViewById(R.id.txt_user); inputName= (EditText) getView().findViewById(R.id.name); inputEmail= (EditText) getView().findViewById(R.id.email); btnSave= (Button) getView().findViewById(R.id.btn_save);

mFirebaseInstance= FirebaseDatabase.getInstance();

// get reference to 'users' node
mFirebaseDatabase= mFirebaseInstance.getReference("users");

// store app title to 'app_title' node
mFirebaseInstance.getReference("app_title").setValue("Houser");

// app_title change listener mFirebaseInstance.getReference("app_title").addValueEventListener(new ValueEventListener() { @Override
public void onDataChange(DataSnapshotdataSnapshot) { Log.e(TAG, "App title updated");

String appTitle = dataSnapshot.getValue(String.class);

// update toolbar title
//getSupportActionBar().setTitle(appTitle);
}

@Override
public void onCancelled(DatabaseError error) {
// Failed to read value
Log.e(TAG, "Failed to read app title value.", error.toException());
}
});

// Save / update the user btnSave.setOnClickListener(new View.OnClickListener() { @Override
public void onClick(View view) {
String name = inputName.getText().toString(); String email = inputEmail.getText().toString();

// Check for already existed userId if (TextUtils.isEmpty(userId)) { createUser(name, email);
} else {
 

updateUser(name, email);
}
}
});

}

@Override
public void onClick(View v) { postDataToSQLite();
}

private void initViews() {
nestedScrollView= (NestedScrollView) getView().findViewById(R.id.nestedScrollView);

textInputLayoutName= (TextInputLayout) getView().findViewById(R.id.textInputLayoutName); textInputLayoutPhone= (TextInputLayout) getView().findViewById(R.id.textInputLayoutPhone); textInputLayoutEmail= (TextInputLayout) getView().findViewById(R.id.textInputLayoutEmail); textInputLayoutPassword= (TextInputLayout) getView().findViewById(R.id.textInputLayoutPassword); textInputLayoutConfirmPassword= (TextInputLayout) getView().findViewById(R.id.textInputLayoutConfirmPassword);

textInputEditTextName= (TextInputEditText) getView().findViewById(R.id.textInputEditTextName); textInputEditTextPhone= (TextInputEditText) getView().findViewById(R.id.textInputEditTextPhone); textInputEditTextEmail= (TextInputEditText) getView().findViewById(R.id.textInputEditTextEmail); textInputEditTextPassword= (TextInputEditText) getView().findViewById(R.id.textInputEditTextPassword); textInputEditTextConfirmPassword= (TextInputEditText) getView().findViewById(R.id.textInputEditTextConfirmPassword);




}

private void initObjects() {
inputValidation= new InputValidation(getActivity()); databaseHelper= new DatabaseHelper(getActivity()); user = new User();

}
private void postDataToSQLite() {
if (!inputValidation.isInputEditTextFilled(textInputEditTextName, textInputLayoutName, getString(R.string.error_message_name))) {
return;
}
if (!inputValidation.isInputEditTextFilled(textInputEditTextPhone, textInputLayoutPhone, "Enter Phone Number")) {
return;
}
if (!inputValidation.isInputEditTextFilled(textInputEditTextEmail, textInputLayoutEmail, getString(R.string.error_message_email))) {
return;
}
if (!inputValidation.isInputEditTextFilled(textInputEditTextEmail, textInputLayoutEmail, getString(R.string.error_message_email))) {
return;
}
if (!inputValidation.isInputEditTextEmail(textInputEditTextEmail, textInputLayoutEmail, getString(R.string.error_message_email))) {
return;
}
if (!inputValidation.isInputEditTextPhone(textInputEditTextPhone, textInputLayoutPhone, getString(R.string.error_message_phone))) {
return;
}
if (!inputValidation.isInputEditTextFilled(textInputEditTextPassword, textInputLayoutPassword,
 

getString(R.string.error_message_password))) {
return;
}
if (!inputValidation.isInputEditTextMatches(textInputEditTextPassword, textInputEditTextConfirmPassword, textInputLayoutConfirmPassword, getString(R.string.error_password_match))) {
return;
}

if (!databaseHelper.checkUser(textInputEditTextEmail.getText().toString().trim())) {

user.setName(textInputEditTextName.getText().toString().trim()); 
user.setPhone(textInputEditTextPhone.getText().toString().trim()); 
user.setEmail(textInputEditTextEmail.getText().toString().trim());
 user.setPassword(textInputEditTextPassword.getText().toString().trim());

databaseHelper.updateUser(user); emptyInputEditText();


}
}

private void emptyInputEditText()

{
textInputEditTextName.setText(null); textInputEditTextPhone.setText(null); 
textInputEditTextEmail.setText(null); textInputEditTextPassword.setText(null); 
textInputEditTextConfirmPassword.setText(null);
}


 XML Code 

<?xml version="1.0" encoding="utf-8"?>

<android.support.v4.widget.NestedScrollView xmlns:
android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
xmlns:app="http://schemas.android.com/apk/res-auto" 
android:id="@+id/nestedScrollView" 
android:layout_width="match_parent" 
android:layout_height="match_parent" 
android:paddingBottom="20dp" 
android:paddingLeft="20dp" 
android:paddingRight="20dp" 
android:paddingTop="20dp">

<LinearLayout 
android:layout_width="match_parent" 
android:layout_height="wrap_content" 
android:orientation="vertical"
android:paddingBottom="@dimen/activity_vertical_margin" 
android:paddingLeft="@dimen/activity_horizontal_margin" 
android:paddingRight="@dimen/activity_horizontal_margin" 
android:paddingTop="0dp" app:layout_behavior="@string/appbar_scrolling_view_behavior">

<TextView android:layout_width="match_parent" 
android:layout_height="match_parent"
 

android:text="Update your Profile" 
android:textColor="@android:color/black" 
android:textStyle="bold" android:textSize="30sp" 
android:layout_marginBottom="70dp" android:gravity="center"/>


<EditText android:id="@+id/old_email" 
android:layout_width="match_parent" 
android:layout_height="wrap_content" 
android:hint="Confirm Email"
android:inputType="textEmailAddress" 
android:maxLines="1" 
android:singleLine="true" />

<EditText android:id="@+id/new_email"

<EditText android:id="@+id/password" 
android:layout_width="match_parent" 
android:layout_height="wrap_content"
 android:focusableInTouchMode="true"
 android:hint="@string/hint_password"
 android:imeActionId="@+id/login"
android:imeOptions="actionUnspecified" 
android:inputType="textPassword" 
android:maxLines="1" android:singleLine="true" tools:ignore="InvalidImeActionId" />

<EditText android:id="@+id/newPassword"

 android:layout_width="match_parent" 

android:layout_height="wrap_content"
 android:focusableInTouchMode="true"
 android:hint="New Password" 
android:imeActionId="@+id/login" 
android:imeOptions="actionUnspecified" 
android:inputType="textPassword" 
android:maxLines="1" android:singleLine="true" tools:ignore="InvalidImeActionId" />

<Button android:id="@+id/send"
style="?android:textAppearanceSmall"
 android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:layout_marginTop="16dp" 
android:background="@android:color/black"
 android:text="Send" android:textColor="@android:color/white"
 android:textStyle="bold" 
android:layout_gravity="end"/>

<ProgressBar android:id="@+id/progressBar"
 android:layout_width="30dp"
 android:layout_height="30dp"
 android:visibility="gone" />
 

<Button android:id="@+id/remove"
style="?android:textAppearanceSmall"
 android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:layout_marginTop="16dp"
 android:background="@color/colorPrimaryDark" 
android:text="Remove" 
android:textColor="@android:color/white"
 android:textStyle="bold" />
<android.support.design.widget.TextInputLayout
 android:layout_width="match_parent"
 android:layout_height="wrap_content">

<EditText android:id="@+id/name"
android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:hint="Name"
 android:inputType="textCapWords"
 android:maxLines="1" />

</android.support.design.widget.TextInputLayout>

<android.support.design.widget.TextInputLayout 
android:layout_width="match_parent"
 android:layout_height="wrap_content">

<EditText android:id="@+id/email"
android:layout_width="match_parent" 
android:layout_height="wrap_content" 
android:hint="Email" 
android:inputType="textEmailAddress"
 android:maxLines="1" />

</android.support.design.widget.TextInputLayout>


